stages:
  - build
  - test
  - release
  - publish
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: normal
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

build:
  stage: build
  image: docker:stable-dind
  script:
    - echo "Logging to GitLab Container Registry with CI credentials..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build --tag $IMAGE_TAG .
    - docker push $IMAGE_TAG

semantic-release:
  stage: release
  image: enix/semantic-release:gitlab
  only:
    - master
  except:
    - tags
  script:
    - semantic-release --ci

deploy-production:
  stage: deploy
  tags:
    - enix-priv
  environment:
    name: production
    url: https://$CI_PROJECT_TITLE.slides.enix.io
  only:
    refs:
      - /^v([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?$/
  image: dtzar/helm-kubectl:$HELM_VERSION
  variables:
    HELM_CHART_APPVERSION: $CI_COMMIT_TAG
  before_script:
    - apk add --no-cache jq
    - kubectl version
    - helm version
  script:
    - >
      sed -i "s/appVersion: 0.0.1/appVersion: $HELM_CHART_APPVERSION/" chart/Chart.yaml
    - >
      export DOCKER_REGISTRY_SECRET=$(kubectl -n slides-enix-io
      create secret docker-registry dummy
      --docker-server=$CI_REGISTRY
      --docker-username="${CI_DEPLOY_USER}"
      --docker-password="${CI_DEPLOY_PASSWORD}"
      -o json --dry-run
      | jq '.data.".dockerconfigjson"')
    - >
      helm upgrade --install --wait $CI_PROJECT_NAME
      --namespace $KUBE_NAMESPACE
      --set image.path=$CI_REGISTRY_IMAGE
      --set image.tag=$CI_COMMIT_REF_NAME
      --set image.pullSecret="$DOCKER_REGISTRY_SECRET"
      chart/